---

  - name: Installer les paquets 
    package:
      name: "{{ peertube_packages }}"
      state: latest

  - name: Add Nodesource apt key.
    apt_key:
      url: https://keyserver.ubuntu.com/pks/lookup?op=get&fingerprint=on&search=0x1655A0AB68576280
      id: "68576280"
      state: present
    when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"  

  - name: Add NodeSource repositories for Node.js.
    apt_repository:
      repo: "{{ item }}"
      state: present
    with_items:
      - "deb https://deb.nodesource.com/node_{{ nodejs_version }} {{ ansible_distribution_release }} main"
      - "deb-src https://deb.nodesource.com/node_{{ nodejs_version }} {{ ansible_distribution_release }} main"
    register: node_repo
    when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"

  - name: Install the nodejs
    package:
      name: nodejs
      state: latest
      
  - name: Install Yarn apt key
    apt_key:
      url: https://dl.yarnpkg.com/debian/pubkey.gpg
      state: present
    when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"  

  - name: Add Yarn apt repo
    apt_repository:
      repo: deb https://dl.yarnpkg.com/debian/ stable main
      state: present
      filename: yarn
    when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"
    
  - name: Install Yarn
    package:
      update_cache: yes
      pkg: yarn
      state: latest  

  - name: Add the user peertube
    user:
      name: peertube
      shell: /bin/bash
      password: peertube

  - name: set permissions 1
    file:  
      path: /var/www/peertube
      state: directory
      owner: "{{ peertube_username }}"
      group: "{{ peertube_username }}"
      mode: 0755

  - name: set permissions 2
    file:  
      path: "/var/www/peertube/{{ item }}"
      state: directory
      owner: "{{ peertube_username }}"
      group: "{{ peertube_username }}"
      recurse: yes
      mode: 0755
    with_items:
      - config
      - storage
      - versions
  
  - name: download latest version of peertube
    unarchive:
      src: "https://github.com/Chocobozzz/PeerTube/releases/download/{{ peertube_version }}/peertube-{{ peertube_version }}.zip"
      dest: /var/www/peertube/
      owner: peertube
      group: peertube
      remote_src: yes
      creates: /var/www/peertube/peertube-{{ peertube_version }}
      
  - name: Generate an OpenSSL private key
    openssl_privatekey:
      path: /etc/ssl/private/{{ ansible_host }}.pem

  - name: Generate an OpenSSL Certificate Signing Request with Subject information
    openssl_certificate:
      path: /etc/ssl/certs/{{ ansible_host }}.crt
      privatekey_path: /etc/ssl/private/{{ ansible_host }}.pem
      provider: selfsigned

  - name: Demarrer nginx
    service:
      name: nginx
      state: started  

  - name: Configurer Nginx, Ajout d'un site
    template:
      src: ../files/site-nginx
      dest: /etc/nginx/sites-available/peertube
    notify: 
      - Recharger nginx
 
  - name: Desactiver le site par default
    file:
      path: /etc/nginx/sites-enabled/default
      state: absent
    notify: 
      - Recharger nginx
     
  - name: Activer le site nginx
    file:
      src: /etc/nginx/sites-available/peertube
      dest: /etc/nginx/sites-enabled/peertube
      state: link
    notify: 
      - Recharger nginx

  - name: set permissions 3
    file:
      path: /var/www/peertube/peertube-{{ peertube_version }}
      owner: peertube
      group: peertube
      recurse: yes
      mode: 0755

  - name: set permissions 4
    file:
      src: /var/www/peertube/peertube-{{ peertube_version }}
      dest: /var/www/peertube/peertube-latest
      owner: "{{ peertube_username }}"
      group: "{{ peertube_username }}"
      state: link

  - name: Copy peertube configuration file
    template:
      src: ../files/production.yaml
      dest: /var/www/peertube/config/production.yaml
      owner: "{{ peertube_username }}"
      group: "{{ peertube_username }}"
      mode: 0644

 
  - name: Installation des d√©pendances
    become_user: root
    command: yarn install --production --pure-lockfile --no-optional
    args:
      chdir: /var/www/peertube/peertube-latest
    
  - name: Copy systemd unit file
    template:
      src: ../files/peertube.service
      dest: /etc/systemd/system/
      owner: root
      group: root
      mode: 0644

  - name: Activation de peertube
    become_user: root
    command: systemctl enable peertube

  - name: Demarrer peertube
    service:
      name: peertube
      state: started

  - name: enable and restart service
    service:
      name: peertube
      daemon_reload: yes
      enabled: yes
      state: restarted
  
